{"version":3,"file":"static/js/276.515ef2e7.chunk.js","mappings":"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","sources":["redux/contacts/selectors.jsx","hooks/useContacts.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","views/ContactsView.jsx"],"sourcesContent":["export const getFilter = state => state.filter;\nexport const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import { useSelector } from \"react-redux\";\nimport { getContacts, getError, getFilter, getIsLoading } from \"redux/contacts/selectors\";\n\nexport const useContacts = () => {\n   const filter = useSelector(getFilter)\n   const contacts = useSelector(getContacts)\n   const isLoading = useSelector(getIsLoading)\n   const error = useSelector(getError)\n\n   return {\n      filter,\n      contacts,\n      isLoading,\n      error\n   }\n}","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contact-operations';\nimport { useContacts } from 'hooks/useContacts';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const {contacts} = useContacts();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const sameName = contacts.find(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase() ||\n        contact.number === number\n    );\n\n    sameName\n      ? alert(`${name} or ${number} is already in contacts`)\n      : dispatch(addContact({name, number}));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <input\n          onChange={handleInputChange}\n          value={name}\n          type=\"text\"\n          placeholder=\"Name\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        <input\n          onChange={handleInputChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className=\"button-submit\" type=\"submit\">\n        App contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { useContacts } from 'hooks/useContacts';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    const filterValue = e.target.value.toLowerCase();\n\n    dispatch(setFilter(filterValue));\n  };\n\n  const {filter} = useContacts();\n  return (\n    <div>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contact-operations';\nimport { useContacts } from 'hooks/useContacts';\n\nconst ContactList = () => {\n  const {contacts} = useContacts();\n  const {filter} = useContacts();\n\n  const dispatch = useDispatch();\n\n  const filterContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n\n  const onRemoveContact = id => {\n    dispatch(deleteContact(id))};\n\n\n\n  return (\n    <ul>\n      {filterContacts.map(({ id, name, number }) => (\n        <li className=\"contact-item\" key={id}>\n          <p>{name}</p>\n          <p>{number}</p>\n          <button className=\"button-remove\" onClick={() => onRemoveContact(id)}>\n            &times;\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contact-operations';\nimport { getError, getIsLoading, getContacts } from 'redux/contacts/selectors';\n\nconst ContactView = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      {contacts.length > 0 && <ContactList />}\n    </>\n  );\n};\n\nexport default ContactView"],"names":["getFilter","state","filter","getContacts","contacts","items","getIsLoading","isLoading","getError","error","useContacts","useSelector","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","handleInputChange","e","_e$target","target","value","reset","_jsxs","onSubmit","preventDefault","find","contact","toLowerCase","alert","concat","addContact","children","_jsx","onChange","type","placeholder","title","required","className","filterValue","setFilter","filterContacts","includes","map","_ref","id","onClick","deleteContact","onRemoveContact","useEffect","fetchContacts","_Fragment","ContactForm","Filter","length","ContactList"],"sourceRoot":""}