{"version":3,"file":"static/js/115.29c49a1a.chunk.js","mappings":"8OAAaA,EAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAO,EAClCC,EAAc,SAAAF,GAAK,OAAIA,EAAMG,SAASC,KAAM,EAC5CC,EAAe,SAAAL,GAAK,OAAIA,EAAMG,SAASG,SAAU,EACjDC,EAAW,SAAAP,GAAK,OAAIA,EAAMG,SAASK,KAAM,ECAzCC,EAAc,WAMxB,MAAO,CACJR,QANYS,EAAAA,EAAAA,IAAYX,GAOxBI,UANcO,EAAAA,EAAAA,IAAYR,GAO1BI,WANeI,EAAAA,EAAAA,IAAYL,GAO3BG,OANWE,EAAAA,EAAAA,IAAYH,GAQ7B,E,mBCbaI,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6pB,mBCmF/B,EA9EoB,WAClB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,GAAWC,EAAAA,EAAAA,MACVvB,EAAYM,IAAZN,SAEDwB,EAAoB,SAAAC,GACxB,IAAAC,EAAwBD,EAAEE,OAAlBX,EAAIU,EAAJV,KAAMY,EAAKF,EAALE,MAEd,OAAQZ,GACN,IAAK,OACHC,EAAQW,GACR,MAEF,IAAK,SACHP,EAAUO,GACV,MAEF,QACE,OAEN,EAkBMC,EAAQ,WACZZ,EAAQ,IACRI,EAAU,GACZ,EAEA,OACES,EAAAA,EAAAA,MAACtB,EAAI,CAACuB,SAtBa,SAAAN,GACnBA,EAAEO,iBAEehC,EAASiC,MACxB,SAAAC,GAAO,OACLA,EAAQlB,KAAKmB,gBAAkBnB,EAAKmB,eACpCD,EAAQd,SAAWA,CAAM,IAIzBgB,EAAAA,GAAAA,MAAY,gPACZd,GAASe,EAAAA,EAAAA,IAAW,CAACrB,KAAAA,EAAMI,OAAAA,KAE/BS,GACF,EAQ+BS,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAAD,UACEC,EAAAA,EAAAA,KAAA,SACEC,SAAUhB,EACVI,MAAOZ,EACPyB,KAAK,OACLC,YAAY,sBACZ1B,KAAK,OACL2B,aAAa,MACbC,MAAM,yIACNC,UAAQ,OAGZN,EAAAA,EAAAA,KAAA,SAAAD,UACEC,EAAAA,EAAAA,KAAA,SACEC,SAAUhB,EACVI,MAAOR,EACPqB,KAAK,MACLzB,KAAK,SACL0B,YAAY,iCACZC,aAAa,MACbC,MAAM,+FACNC,UAAQ,OAGZN,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAAQH,SAAC,sFAK5B,E,UCjFaQ,EAAYrC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uEAMtBoC,EAAQtC,EAAAA,GAAAA,MAAYuC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,sOCoBjC,EAvBe,WACb,IAAMW,GAAWC,EAAAA,EAAAA,MAQVzB,EAAUQ,IAAVR,OACP,OACEyC,EAAAA,EAAAA,KAACO,EAAS,CAAAR,UACRC,EAAAA,EAAAA,KAACQ,EAAK,CACJN,KAAK,OACLzB,KAAK,SACLY,MAAO9B,EACP4C,YAAY,kFACZF,SAdqB,SAAAf,GACzB,IAAMwB,EAAcxB,EAAEE,OAAOC,MAAMO,cAEnCb,GAAS4B,EAAAA,EAAAA,GAAUD,GACrB,KAcF,ECxBaE,EAAO1C,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uFAOhByC,EAAO3C,EAAAA,GAAAA,GAASuC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,mFAOhB0C,EAAO5C,EAAAA,GAAAA,EAAQ6C,IAAAA,GAAA3C,EAAAA,EAAAA,GAAA,yGAQf4C,EAAS9C,EAAAA,GAAAA,OAAa+C,IAAAA,GAAA7C,EAAAA,EAAAA,GAAA,gG,UCanC,EA9BoB,WAClB,IAAOX,EAAYM,IAAZN,SACAF,EAAUQ,IAAVR,OAEDwB,GAAWC,EAAAA,EAAAA,MAEXkC,EAAiBzD,EAASF,QAAO,SAAAoC,GAAO,OAC5CA,EAAQlB,KAAKmB,cAAcuB,SAAS5D,EAAO,IAQ7C,OACEyC,EAAAA,EAAAA,KAACY,EAAI,CAAAb,SACFmB,EAAeE,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAI7C,EAAI4C,EAAJ5C,KAAMI,EAAMwC,EAANxC,OAAM,OACrCU,EAAAA,EAAAA,MAACsB,EAAI,CAACU,UAAU,eAAcxB,SAAA,EAC5BR,EAAAA,EAAAA,MAACuB,EAAI,CAAAf,SAAA,CAAC,wBAAOtB,MACbc,EAAAA,EAAAA,MAACuB,EAAI,CAAAf,SAAA,CAAC,+CAAUlB,MAChBmB,EAAAA,EAAAA,KAACgB,EAAM,CAACO,UAAU,gBAAgBC,QAAS,kBAX3B,SAAAF,GACtBvC,GAAS0C,EAAAA,EAAAA,IAAcH,GAAI,CAU4BI,CAAgBJ,EAAG,EAACvB,UACnEC,EAAAA,EAAAA,KAAC2B,EAAAA,IAAQ,CAACC,KAAM,GAAIC,MAAM,aAJMP,EAM7B,KAIf,E,UCJA,EAtBoB,WAClB,IAAMvC,GAAWC,EAAAA,EAAAA,MAEXpB,GAAYI,EAAAA,EAAAA,IAAYL,GACxBG,GAAQE,EAAAA,EAAAA,IAAYH,GACpBJ,GAAWO,EAAAA,EAAAA,IAAYR,GAM7B,OAJAsE,EAAAA,EAAAA,YAAU,WACR/C,GAASgD,EAAAA,EAAAA,MACX,GAAG,CAAChD,KAGFQ,EAAAA,EAAAA,MAAAyC,EAAAA,SAAA,CAAAjC,SAAA,EACEC,EAAAA,EAAAA,KAACiC,EAAW,KAEZjC,EAAAA,EAAAA,KAACkC,EAAM,IACNtE,IAAcE,IAASkC,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,IAC9B1E,EAAS2E,OAAS,IAAKpC,EAAAA,EAAAA,KAACqC,EAAW,MAG1C,C","sources":["redux/contacts/selectors.jsx","hooks/useContacts.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","views/ContactsView.jsx"],"sourcesContent":["export const getFilter = state => state.filter;\nexport const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import { useSelector } from \"react-redux\";\nimport { getContacts, getError, getFilter, getIsLoading } from \"redux/contacts/selectors\";\n\nexport const useContacts = () => {\n   const filter = useSelector(getFilter)\n   const contacts = useSelector(getContacts)\n   const isLoading = useSelector(getIsLoading)\n   const error = useSelector(getError)\n\n   return {\n      filter,\n      contacts,\n      isLoading,\n      error\n   }\n}","import { styled } from 'styled-components';\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ngap: 25px;\nmargin-top: 50px;\n\ninput {\n   font-family: var(--family);\n   border: none;\n   outline: none;\n   border-bottom: 1px solid #5C5A5D;\n   background-color: transparent;\n   width: 250px;\n   padding-top: 8px;\n   font-size: 16px;\n   color: #5C5A5D;\n   }\n\n   button {\n      padding: 10px 8px;\n      border-radius: 13px;\n      border: none;\n      cursor: pointer;\n      font-family: var(--family);\nfont-weight: 400;\nfont-size: 15px;\ntransition: background-color 1s; \n   }\n\n   button:hover, button:focus {\n      background-color: #8846A4;\n      color: #fff;\n   }\n}\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contact-operations';\nimport { useContacts } from 'hooks/useContacts';\nimport { Form } from './ContactForm.styled';\nimport { toast } from 'react-toastify';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const {contacts} = useContacts();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const sameName = contacts.find(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase() ||\n        contact.number === number\n    );\n\n    sameName\n      ? toast.error(`Користувач з таким ім'ям або номером вже існує`)\n      : dispatch(addContact({name, number}));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>\n        <input\n          onChange={handleInputChange}\n          value={name}\n          type=\"text\"\n          placeholder=\"Ім'я\"\n          name=\"name\"\n          autoComplete='off'\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        <input\n          onChange={handleInputChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Номер\"\n          autoComplete='off'\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">\n        Додати контакт\n      </button>\n    </Form>\n  );\n};\n\nexport default ContactForm;","import { styled } from 'styled-components';\n\nexport const Container = styled.div`\nmargin-top: 40px;\nmargin-left: 80px;\nmargin-bottom: 50px;\n`\n\nexport const Input = styled.input`\nfont-family: var(--family);\n   border: none;\n   outline: none;\n   border-bottom: 1px solid #5C5A5D;\n   background-color: transparent;\n   width: 250px;\n   padding-top: 8px;\n   font-size: 16px;\n   color: #5C5A5D;\n`","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { useContacts } from 'hooks/useContacts';\nimport { Container, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    const filterValue = e.target.value.toLowerCase();\n\n    dispatch(setFilter(filterValue));\n  };\n\n  const {filter} = useContacts();\n  return (\n    <Container>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder='Пошук контакту'\n        onChange={handleFilterChange}\n      />\n    </Container>\n  );\n};\n\nexport default Filter;\n","import { styled } from \"styled-components\";\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\ngap: 40px;\nlist-style: none;\nmargin: 0;\n`\nexport const Item = styled.li`\ndisplay: flex;\nflex-direction: column;\nalign-items: start;\ngap: 5px;\n`\n\nexport const Text = styled.p`\nfont-family: var(--family);\nfont-weight: 500;\nfont-size: 16px;\nmargin: 0;\ncolor: #472C4C;\n`\n\nexport const Button = styled.button`\nborder: none;\nbackground-color: transparent;\ncursor: pointer;\ntext-align: center;\n`","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contact-operations';\nimport { useContacts } from 'hooks/useContacts';\nimport { List, Item, Text, Button } from './ContactList.styled';\nimport { MdDelete } from \"react-icons/md\";\n\n\nconst ContactList = () => {\n  const {contacts} = useContacts();\n  const {filter} = useContacts();\n\n  const dispatch = useDispatch();\n\n  const filterContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n\n  const onRemoveContact = id => {\n    dispatch(deleteContact(id))};\n\n\n\n  return (\n    <List>\n      {filterContacts.map(({ id, name, number }) => (\n        <Item className=\"contact-item\" key={id}>\n          <Text>Ім'я: {name}</Text>\n          <Text>Телефон: {number}</Text>\n          <Button className=\"button-remove\" onClick={() => onRemoveContact(id)}>\n            <MdDelete size={25} color='#fff'/>\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contact-operations';\nimport { getError, getIsLoading, getContacts } from 'redux/contacts/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nconst ContactView = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n\n      <Filter />\n      {isLoading && !error && <Loader/>}\n      {contacts.length > 0 && <ContactList />}\n    </>\n  );\n};\n\nexport default ContactView"],"names":["getFilter","state","filter","getContacts","contacts","items","getIsLoading","isLoading","getError","error","useContacts","useSelector","Form","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","handleInputChange","e","_e$target","target","value","reset","_jsxs","onSubmit","preventDefault","find","contact","toLowerCase","toast","addContact","children","_jsx","onChange","type","placeholder","autoComplete","title","required","Container","Input","_templateObject2","filterValue","setFilter","List","Item","Text","_templateObject3","Button","_templateObject4","filterContacts","includes","map","_ref","id","className","onClick","deleteContact","onRemoveContact","MdDelete","size","color","useEffect","fetchContacts","_Fragment","ContactForm","Filter","Loader","length","ContactList"],"sourceRoot":""}